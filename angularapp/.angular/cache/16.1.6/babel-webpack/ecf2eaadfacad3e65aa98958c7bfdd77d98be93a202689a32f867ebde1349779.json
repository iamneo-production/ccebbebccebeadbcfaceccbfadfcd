{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport * as i0 from \"@angular/core\";\nclass AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: function () {\n    return [AppComponent];\n  }\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule]\n});\nexport { AppModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: function () {\n      return [AppComponent, ConvertPipe];\n    },\n    imports: function () {\n      return [BrowserModule, FormsModule, ReactiveFormsModule];\n    }\n  });\n})();\napp.module.ts;\nclass ConvertPipe {\n  transform(fromcurrency, toCurrency, amount) {\n    return Math.round(toCurrency * amount / fromcurrency);\n  }\n}\nConvertPipe.ɵfac = function ConvertPipe_Factory(t) {\n  return new (t || ConvertPipe)();\n};\nConvertPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"convert\",\n  type: ConvertPipe,\n  pure: true\n});\nexport { ConvertPipe };","map":{"version":3,"names":["BrowserModule","FormsModule","ReactiveFormsModule","AppComponent","AppModule","bootstrap","declarations","ConvertPipe","imports","app","module","ts","transform","fromcurrency","toCurrency","amount","Math","round","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/convert.pipe.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ConvertPipe } from './convert.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConvertPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n        ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\napp.module.ts\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'convert'\n})\nexport class ConvertPipe implements PipeTransform {\n\n  transform(fromcurrency: number, toCurrency: number,amount: number): any {\n      return Math.round(toCurrency*amount/fromcurrency) \n  }\n\n}\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,YAAY,QAAQ,iBAAiB;;AAG9C,MAaaC,SAAS;AAATA,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;QAATA,SAAS;EAAAC,SAAA,WAAAA,CAAA;IAAA,QAFRF,YAAY;EAAA;AAAA;AAEbC,SAAS,C;YAPlBJ,aAAa,EACbC,WAAW,EACPC,mBAAmB;AAAA;SAKdE,SAAS;;2EAATA,SAAS;IAAAE,YAAA,WAAAA,CAAA;MAAA,QAXlBH,YAAY,EAoBHI,WAAW;IAAA;IAAAC,OAAA,WAAAA,CAAA;MAAA,QAhBpBR,aAAa,EACbC,WAAW,EACPC,mBAAmB;IAAA;EAAA;AAAA;AAO3BO,GAAG,CAACC,MAAM,CAACC,EAAE;AAIb,MAGaJ,WAAW;EAEtBK,SAASA,CAACC,YAAoB,EAAEC,UAAkB,EAACC,MAAc;IAC7D,OAAOC,IAAI,CAACC,KAAK,CAACH,UAAU,GAACC,MAAM,GAACF,YAAY,CAAC;EACrD;;AAJWN,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;;QAAXA,WAAW;EAAAW,IAAA;AAAA;SAAXX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}